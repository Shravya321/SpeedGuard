

//plugins {
//    id "com.android.application"
//    id "kotlin-android"
//    id "com.google.gms.google-services"
//// The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
//    id "dev.flutter.flutter-gradle-plugin"
//
//}
////
//def localProperties = new Properties()
//def localPropertiesFile = rootProject.file("local.properties")
//if (localPropertiesFile.exists()) {
//    localPropertiesFile.withReader("UTF-8") { reader ->
//        localProperties.load(reader)
//    }
//}
//
//def flutterVersionCode = localProperties.getProperty("flutter.versionCode")
//if (flutterVersionCode == null) {
//    flutterVersionCode = "1"
//}
//
//def flutterVersionName = localProperties.getProperty("flutter.versionName")
//if (flutterVersionName == null) {
//    flutterVersionName = "1.0"
//}
////apply plugin: 'com.google.gms.google-services'
//
//
//android {
//    namespace = "com.example.mini_project1"
//    compileSdk = flutter.compileSdkVersion
//    ndkVersion = flutter.ndkVersion
//
//    compileOptions {
//        sourceCompatibility = JavaVersion.VERSION_1_8
//        targetCompatibility = JavaVersion.VERSION_1_8
//    }
//
////    kotlinOptions{
////        jvmTarget='1.8'
////    }
////    sourceSets{
////        main.java.srcDirs+='src/main/kotlin'
////    }
//
//    defaultConfig {
//        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
//        applicationId = "com.example.mini_project1"
//        // You can update the following values to match your application needs.
//        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
//        minSdkVersion 23
//        targetSdkVersion flutter.targetSdkVersion
//        versionCode flutterVersionCode.toInteger()
//        versionName flutterVersionName
//    }
//
//    buildTypes {
//        release {
//            // TODO: Add your own signing config for the release build.
//            // Signing with the debug keys for now, so `flutter run --release` works.
//            signingConfig signingConfigs.debug
//        }
//    }
//}
//
//flutter {
//    source = "../.."
//}
//dependencies {
//    implementation platform('com.google.firebase:firebase-bom:33.1.0')
//    implementation("com.google.firebase:firebase-appcheck")
//    implementation 'com.google.firebase:firebase-appcheck-safetynet:16.1.2'
//    implementation 'com.google.firebase:firebase-storage:21.0.0' // Check for the latest version
//    implementation 'com.google.firebase:firebase-firestore:25.0.0'
//    //implementation 'com.google.firebase:firebase-auth'
//    //implementation 'com.google.firebase:firebase-firestore'
//}

//dependencies {
//    implementation platform 'com.google.firebase:firebase-bom:32.1.1'
////    implementation 'com.google.firebase:firebase-analytics:21.0.0'
//    implementation 'com.google.firebase:firebase-analytics'// Example Firebase dependency, add more as needed
//    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version" // Ensure Kotlin dependency if using Kotlin

    // Add other Firebase dependencies as needed, for example:
//    implementation 'com.google.firebase:firebase-firestore:24.0.0' // For Firestore
//    implementation 'com.google.firebase:firebase-database:20.0.0' // For Realtime Database
//    implementation 'com.google.firebase:firebase-auth:21.0.0' // For Firebase Authentication

//apply plugin: 'com.google.gms.google-services'
//

plugins {
    id "com.android.application"
    id "kotlin-android"

    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
//    id "com.google.gms.google-services" // Add this line to apply the Google services plugin
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader("UTF-8") { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty("flutter.versionCode")
if (flutterVersionCode == null) {
    flutterVersionCode = "1"
}

def flutterVersionName = localProperties.getProperty("flutter.versionName")
if (flutterVersionName == null) {
    flutterVersionName = "1.0"
}

android {
    namespace = "com.example.mini_project1"
    compileSdk = flutter.compileSdkVersion
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId = "com.example.mini_project1"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        minSdk = 23
        targetSdk = flutter.targetSdkVersion
        versionCode = flutterVersionCode.toInteger()
        versionName = flutterVersionName
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig = signingConfigs.debug
        }
    }
}

flutter {
    source = "../.."
}
//dependencies {
//    // Import the BoM for the Firebase platform
//    implementation(platform("com.google.firebase:firebase-bom:33.1.1"))
//
//    // Add the dependency for the Firebase Authentication library
//    // When using the BoM, you don't specify versions in Firebase library dependencies
//    implementation("com.google.firebase:firebase-auth")
//}
//dependencies {
//    // ...
//    implementation platform('com.google.firebase:firebase-bom:33.1.0')
//    implementation 'com.google.firebase:firebase-analytics'
//    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
//    implementation 'com.google.firebase:firebase-auth:21.0.1'
//    implementation 'com.google.firebase:firebase-firestore:24.0.0'
//}
//apply plugin: 'com.google.gms.google-services'

////dependencies {
////    implementation 'com.google.firebase:firebase-analytics:21.0.0' // Example Firebase dependency, add more as needed
////    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.4.10' // Ensure Kotlin dependency if using Kotlin
////
////    // Add other Firebase dependencies as needed, for example:
////    implementation 'com.google.firebase:firebase-firestore:24.0.0' // For Firestore
////    implementation 'com.google.firebase:firebase-database:20.0.0' // For Realtime Database
//////    implementation 'com.google.firebase:firebase-auth:21.0.0' // For Firebase Authentication
////}
//
//// Add the following line to apply the Google services plugin
//apply plugin: 'com.google.gms.google-services'
