// Top-level build file where you can add configuration options common to all sub-projects/modules.
//buildscript {
//    ext.kotlin_version = '1.5.31'
//    repositories {
//        google()
//        mavenCentral()
//    }
//    dependencies {
//        classpath 'com.android.tools.build:gradle:4.1.0'
//        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"// Ensure this matches your current Android Gradle plugin version
//        classpath 'com.google.gms:google-services:4.3.10' // Add this line for Firebase, check for the latest version
//    }
//}
//
//allprojects {
//    repositories {
//        google()
//        mavenCentral()
//    }
//}
//
//rootProject.buildDir = "../build"
//subprojects {
//    project.buildDir = "${rootProject.buildDir}/${project.name}"
//}
//subprojects {
//    project.evaluationDependsOn(":app")
//}
//
//tasks.register("clean", Delete) {
//    delete rootProject.buildDir
//}
//buildscript {
//    repositories {
//        google()
//        mavenCentral()
//    }
//    dependencies {
//        classpath 'com.google.gms:google-services:4.3.10'
//        classpath 'com.android.tools.build:gradle:4.1.0'
//        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
//// Ensure this matches your current Android Gradle plugin version
//        // Add this line for Firebase, check for the latest version
//    }
//}
//plugins {
//    id 'com.google.gms.google-services' version '4.4.1' apply false
//}
//buildscript {
//    ext.kotlin_version='1.9.0'
//    repositories {
//        google()
//        mavenCentral()
//    }
//    dependencies {
//        classpath 'com.android.tools.build:gradle:7.0.2'
//        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
//        classpath 'com.google.gms:google-services:4.3.10' // make sure this version is updated
//    }


allprojects {
    repositories {
        google()
        mavenCentral()
    }
}

rootProject.buildDir = "../build"
subprojects {
    project.buildDir = "${rootProject.buildDir}/${project.name}"
}
subprojects {
    project.evaluationDependsOn(":app")
}

tasks.register("clean", Delete) {
    delete rootProject.buildDir
}
